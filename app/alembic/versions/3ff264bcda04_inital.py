"""inital

Revision ID: 3ff264bcda04
Revises: 77003b26de36
Create Date: 2023-05-29 09:52:57.664694

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3ff264bcda04'
down_revision = '77003b26de36'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brand',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description_en', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description_it', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('logo', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_hot', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('continent',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('name_en', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('name_it', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipping_zone',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('country',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('name_en', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('name_it', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('continent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['continent_id'], ['continent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('import_query',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('products_clicks', sa.Integer(), nullable=False),
    sa.Column('priority_score', sa.Float(), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipping_zone_country_link',
    sa.Column('shipping_zone_id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['shipping_zone_id'], ['shipping_zone.id'], ),
    sa.PrimaryKeyConstraint('shipping_zone_id', 'country_id')
    )
    op.create_table('store',
    sa.Column('locale', sa.Enum('en_US', 'it_IT', name='locale'), nullable=True),
    sa.Column('currency', sa.Enum('EUR', 'USD', 'AUD', 'CAD', 'GBP', name='currency'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('public_id', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('logo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('affiliate_query_param', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('affiliate_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_check', sa.DateTime(), nullable=True),
    sa.Column('is_parsable', sa.Boolean(), nullable=False),
    sa.Column('reason_could_not_be_parsed', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('scrape_with_js', sa.Boolean(), nullable=False),
    sa.Column('search_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('search_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('search_class', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('search_link', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('search_next_page', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('search_page_param', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_name_class', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_name_css_is_class', sa.Boolean(), nullable=False),
    sa.Column('product_name_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_price_class', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_price_css_is_class', sa.Boolean(), nullable=False),
    sa.Column('product_price_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_image_class', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_image_css_is_class', sa.Boolean(), nullable=False),
    sa.Column('product_image_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_thumb_class', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_thumb_css_is_class', sa.Boolean(), nullable=False),
    sa.Column('product_thumb_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_is_available_class', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_is_available_css_is_class', sa.Boolean(), nullable=False),
    sa.Column('product_is_available_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_is_available_match', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_variations_class', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_variations_css_is_class', sa.Boolean(), nullable=False),
    sa.Column('product_variations_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_description_class', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_description_css_is_class', sa.Boolean(), nullable=False),
    sa.Column('product_description_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('__ts_vector__', postgresql.TSVECTOR(), sa.Computed("to_tsvector('english', name)", persisted=True), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('currency', sa.Enum('EUR', 'USD', 'AUD', 'CAD', 'GBP', name='currency'), nullable=True),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('link', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('import_date', sa.DateTime(), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('import_query_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.ForeignKeyConstraint(['import_query_id'], ['import_query.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_product', 'product', ['__ts_vector__'], unique=False, postgresql_using='gin')
    op.create_table('shipping_method',
    sa.Column('currency', postgresql.ENUM('EUR', 'USD', 'AUD', 'CAD', 'GBP', name='currency'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('name_en', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('name_it', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('min_shipping_time', sa.Integer(), nullable=True),
    sa.Column('max_shipping_time', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.Column('min_price_shipping_condition', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.Column('shipping_zone_id', sa.Integer(), nullable=True),
    sa.Column('is_vat_included', sa.Boolean(), nullable=True),
    sa.Column('is_weight_dependent', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['shipping_zone_id'], ['shipping_zone.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clicked_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('clicked_after_seconds', sa.Float(), nullable=False),
    sa.Column('search_query', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=False),
    sa.Column('page', sa.Integer(), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('clicked_product')
    op.drop_table('shipping_method')
    op.drop_index('ix_product', table_name='product', postgresql_using='gin')
    op.drop_table('product')
    op.drop_table('store')
    op.drop_table('shipping_zone_country_link')
    op.drop_table('import_query')
    op.drop_table('country')
    op.drop_table('shipping_zone')
    op.drop_table('continent')
    op.drop_table('brand')
    # ### end Alembic commands ###
