version: "3.8"
services:
  db:
    image: postgres:15.3-alpine3.18
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - CORS_ORIGINS=${CORS_ORIGINS}
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./pg-data:/var/lib/postgresql/data

  backend:
    image: fpv-finder/backend:latest
    build:
      context: app/
      dockerfile: ../docker/backend.Dockerfile
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - CORS_ORIGINS=${CORS_ORIGINS}
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - ./app:/app

  worker:
    image: fpv-finder/worker:latest
    build:
      context: app/
      dockerfile: ../docker/worker.Dockerfile
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - CORS_ORIGINS=${CORS_ORIGINS}
    env_file:
      - .env
    volumes:
      - ./app:/app

volumes:
  pg-data:
