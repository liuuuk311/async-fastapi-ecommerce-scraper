services:
  db:
    image: postgres:15.3-alpine3.18
    restart: always
    container_name: db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      # https://youtrack.jetbrains.com/issue/RIDER-42244/Could-not-connect-to-the-Postgres-instance-with-scram-sha-256-enabled
      # - POSTGRES_INITDB_ARGS="--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - ./pg-data:/var/lib/postgresql/data

  backend:
    image: registry.digitalocean.com/lp-container-registry/backend:latest
    build:
      context: app/
      dockerfile: ../docker/backend.Dockerfile
    restart: always
    container_name: backend
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - SECRET_KEY=${SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DO_SPACES_ACCESS_KEY=${DO_SPACES_ACCESS_KEY}
      - DO_SPACES_SECRET_KEY=${DO_SPACES_SECRET_KEY}
      - DO_SPACES_ENDPOINT_URL=${DO_SPACES_ENDPOINT_URL}
      - DO_SPACES_BUCKET_NAME=${DO_SPACES_BUCKET_NAME}
      - TELEGRAM_NORTH_FPV_BOT_API_KEY=${TELEGRAM_NORTH_FPV_BOT_API_KEY}
      - TELEGRAM_NORTH_FPV_MAIN_CHANNEL=${TELEGRAM_NORTH_FPV_MAIN_CHANNEL}
      - FRONTEND_HOST=${FRONTEND_HOST}
    ports:
      - "8000:8000"
    depends_on:
      - db

  cron-worker:
    image: registry.digitalocean.com/lp-container-registry/cron-worker:latest
    build:
      context: app/
      dockerfile: ../docker/cron.Dockerfile
    command: [ "bash", "./cron-start.sh" ]
    restart: always
    container_name: cron-worker
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - TELEGRAM_BOT_API_KEY=${TELEGRAM_BOT_API_KEY}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - FREE_CURRENCIES_API_URL=${FREE_CURRENCIES_API_URL}
      - FREE_CURRENCIES_API_KEY=${FREE_CURRENCIES_API_KEY}
    depends_on:
      - db

  webserver:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    restart: always
    container_name: webserver
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - backend

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  pg-data:
